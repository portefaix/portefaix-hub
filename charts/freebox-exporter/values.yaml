# Copyright (C) Nicolas Lamirault <nicolas.lamirault@gmail.com>
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# SPDX-License-Identifier: Apache-2.0

---
##
# Freebox Exporter configuration
exporter:
  # An existing secret which contains credentials.json
  credentialsSecret: ""
  # Provide custom key for the existing secret to load credentials.json from
  credentialsSecretKey: ""
  # The credentials JSON file. Must be provided when no existing secret is used, in this case a new secret will be created
  credentials: "{}"
  log:
    # -- Log format. Could be logfmt or json
    format: logfmt
    # -- Log level
    level: info
  web:
    # -- HTTP port used
    port: 9091
    # -- Path under which to expose metrics.
    path: /metrics
    
# -- Docker image
image:
  repository: ghcr.io/nlamirault/freebox-exporter
  tag: 1.0.0
  pullPolicy: IfNotPresent
  pullSecrets:
  # - name: "image-pull-secret"

# Optionally specify an array of imagePullSecrets.
# Secrets must be manually created in the namespace.
# ref: https://kubernetes.io/docs/concepts/containers/images/#specifying-imagepullsecrets-on-a-pod
# imagePullSecrets:
  # - name: myRegistryKeySecretName

# -- Additional labels to add to all resources
additionalLabels: {}
  # app: freebox-exporter

# -- Additional annotations to add to all resources
additionalAnnotations: {}

restartPolicy: Always

# -- Number of instance
replicas: 1

# -- Additional secret mounts
# Defines additional mounts with secrets. Secrets must be manually created in the namespace.
extraSecretMounts: []
  # - name: secret-files
  #   mountPath: /run/secrets/snmp-exporter
  #   secretName: snmp-exporter-secret-files
  #   readOnly: true
  #   defaultMode: 420

## For RBAC support:
rbac:
  # -- Specifies whether RBAC resources should be created
  create: true

serviceAccount:
  # -- Specifies whether a ServiceAccount should be created
  create: true

  # The name of the ServiceAccount to use.
  # If not set and create is true, a name is generated using the fullname template
  name:

# -- Container resources: requests and limits for CPU, Memory
resources: {}
  # limits:
  #   memory: 300Mi
  # requests:
  #   memory: 50Mi

# -- Configure Kubernetes liveness probe.
# Ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/
livenessProbe:
  enabled: true
  initialDelaySeconds: 0
  timeoutSeconds: 1

# -- Configure Kubernetes readiness probe.
# Ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/
readinessProbe:
  enabled: true
  initialDelaySeconds: 0
  timeoutSeconds: 1
  periodSeconds: 10
  successThreshold: 1

service:
  annotations: {}
  type: ClusterIP

## An Ingress resource can provide name-based virtual hosting and TLS
## termination among other things for CouchDB deployments which are accessed
## from outside the Kubernetes cluster.
## ref: https://kubernetes.io/docs/concepts/services-networking/ingress/
ingress:
  enabled: false
  hosts: []
     # - chart-example.local
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  tls: []
    # Secrets must be manually created in the namespace.
    # - secretName: chart-example-tls
    #   hosts:
    #     - chart-example.local

podAnnotations: {}

# -- Leverage a PriorityClass to ensure your pods survive resource shortages
# ref: https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/
priorityClassName: ""

# -- Affinity for pod assignment
# Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
affinity: {}

# -- Tolerations for pod assignment
# Ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
tolerations: []

# -- Node labels for pod assignment
# Ref: https://kubernetes.io/docs/user-guide/node-selection/
nodeSelector: {}

# Configure Kubernetes security context for container
# Ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
containerSecurityContext: {}
  # allowPrivilegeEscalation: false
  # readOnlyRootFilesystem: true

securityContext:
  runAsUser: 65534
  fsGroup: 65534

serviceMonitor:
  # -- Enable this if you're using https://github.com/coreos/prometheus-operator
  enabled: false
  # -- Namespace to deploy the ServiceMonitor
  namespace: ""

  # -- Fallback to the prometheus default unless specified
  interval: 30s

  # -- Add custom labels to the ServiceMonitor resource
  additionalLabels: {}
    # prometheus: kube-prometheus

  honorLabels: false

  # -- Path to scrape metrics
  path: /metrics
  # -- Timeout for scrape metrics request
  scrapeTimeout: 10s
