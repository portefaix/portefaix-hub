---
# Copyright (C) Nicolas Lamirault <nicolas.lamirault@gmail.com>
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# SPDX-License-Identifier: Apache-2.0

pizza:
  # Log level
  logLevel: debug
  # OTLP endpoints
  otlp: ""
  # Grafana Faro endpoint
  faro: ""

# -- Additional labels to attach to all resources
additionalLabels: {}

image:
  # -- Docker repository
  repository: ghcr.io/grafana/quickpizza-local
  # -- Docker image tag.
  tag: ""
  # When digest is set to a non-empty value, images will be pulled by digest (regardless of tag value).
  digest: ""
  pullPolicy: IfNotPresent

service:
  type: ClusterIP
  port: 3333

frontend:
  # -- Number of replicas for the Frontend component
  replicas: 1
  ## Ref: http://kubernetes.io/docs/user-guide/compute-resources/
  # -- Frontend resource requests and limits
  resources: {}
    # limits:
    #   memory: 300Mi
    # requests:
    #   cpu: 50m
    #   memory: 50Mi

config:
  # -- Number of replicas for the Config component
  replicas: 1
  ## Ref: http://kubernetes.io/docs/user-guide/compute-resources/
  # -- Config resource requests and limits
  resources: {}
    # limits:
    #   memory: 300Mi
    # requests:
    #   memory: 50Mi

ws:
  # -- Number of replicas for the WS component
  replicas: 1
  ## Ref: http://kubernetes.io/docs/user-guide/compute-resources/
  # -- WS resource requests and limits
  resources: {}
    # limits:
    #   memory: 300Mi
    # requests:
    #   cpu: 50m
    #   memory: 50Mi

catalog:
  # -- Number of replicas for the Catalog component
  replicas: 1
  ## Ref: http://kubernetes.io/docs/user-guide/compute-resources/
  # -- Catalog resource requests and limits
  resources: {}
    # limits:
    #   memory: 300Mi
    # requests:
    #   cpu: 50m
    #   memory: 50Mi

copy:
  # -- Number of replicas for the Copy component
  replicas: 1
  ## Ref: http://kubernetes.io/docs/user-guide/compute-resources/
  # -- Copy resource requests and limits
  resources: {}
    # limits:
    #   memory: 300Mi
    # requests:
    #   cpu: 50m
    #   memory: 50Mi

recs:
  # -- Number of replicas for the Recs component
  replicas: 1
  ## Ref: http://kubernetes.io/docs/user-guide/compute-resources/
  # -- Recs resource requests and limits
  resources: {}
    # limits:
    #   memory: 300Mi
    # requests:
    #   cpu: 50m
    #   memory: 50Mi

## Ref: https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/
# -- Node tolerations for server scheduling to nodes with taints
tolerations: []
  # - key: "key"
  #   operator: "Equal|Exists"
  #   value: "value"
  #   effect: "NoSchedule|PreferNoSchedule|NoExecute(1.6 only)"

## Ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodeselector
# -- Node labels for Prometheus server pod assignment
nodeSelector: {}

## Ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#affinity-and-anti-affinity
# -- Pod affinity
affinity: {}

serviceMonitor:
  enabled: true
  additionalLabels: {}
