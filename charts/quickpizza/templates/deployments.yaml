# Copyright (C) Nicolas Lamirault <nicolas.lamirault@gmail.com>
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# SPDX-License-Identifier: Apache-2.0

---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    {{- include "quickpizza.labels" . | indent 4 }}
    {{- include "quickpizza.frontend.labels" . | nindent 4 }}
  name: {{ template "quickpizza.fullname" . }}-frontend
  namespace: {{ template "quickpizza.namespace" . }}
spec:
  replicas: {{ .Values.frontend.replicas }}
  selector:
    matchLabels:
      {{- include "quickpizza.selectorLabels" . | indent 6 }}
      {{- include "quickpizza.frontend.labels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "quickpizza.labels" . | indent 8 }}
        {{- include "quickpizza.frontend.labels" . | nindent 8 }}
      name: {{ template "quickpizza.fullname" . }}-frontend
    spec:
      restartPolicy: Always
      {{- if .Values.nodeSelector }}
      nodeSelector:
      {{ toYaml .Values.nodeSelector | indent 8 }}
      {{- end }}
      {{- if .Values.affinity }}
      affinity:
      {{ toYaml .Values.affinity | indent 8 }}
      {{- end }}
      {{- if .Values.tolerations }}
      tolerations:
      {{ toYaml .Values.tolerations | indent 6 }}
      {{- end }}
      containers:
        - name: quickpizza
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
          envFrom:
            - configMapRef:
                name: {{ template "quickpizza.fullname" . }}-telemetry
                optional: true
            - configMapRef:
                name: {{ template "quickpizza.fullname" . }}-env
          env:
            - name: QUICKPIZZA_ALL_SERVICES
              value: "0"
            - name: QUICKPIZZA_FRONTEND
              value: "1"
            - name: QUICKPIZZA_CATALOG_ENDPOINT
              value: http://{{ template "quickpizza.fullname" . }}-catalog:{{ .Values.service.port }}
            - name: QUICKPIZZA_COPY_ENDPOINT
              value: http://{{ template "quickpizza.fullname" . }}-copy:{{ .Values.service.port }}
            - name: QUICKPIZZA_WS_ENDPOINT
              value: http://{{ template "quickpizza.fullname" . }}-ws:{{ .Values.service.port }}
            - name: QUICKPIZZA_RECOMMENDATIONS_ENDPOINT
              value: http://{{ template "quickpizza.fullname" . }}-recs:{{ .Values.service.port }}
            - name: QUICKPIZZA_CONFIG_ENDPOINT
              value: http://{{ template "quickpizza.fullname" . }}-config:{{ .Values.service.port }}
          {{- with .Values.frontend.resources }}
          resources:
          {{- toYaml . | nindent 12 }}
          {{- end }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    {{- include "quickpizza.labels" . | indent 4 }}
    {{- include "quickpizza.config.labels" . | nindent 4 }}
  name: {{ template "quickpizza.fullname" . }}-config
  namespace: {{ template "quickpizza.namespace" . }}
spec:
  replicas: {{ .Values.config.replicas }}
  selector:
    matchLabels:
      {{- include "quickpizza.selectorLabels" . | indent 6 }}
      {{- include "quickpizza.config.labels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "quickpizza.labels" . | indent 8 }}
        {{- include "quickpizza.config.labels" . | nindent 8 }}
      name: {{ template "quickpizza.fullname" . }}-config
    spec:
      restartPolicy: Always
      {{- if .Values.nodeSelector }}
      nodeSelector:
      {{ toYaml .Values.nodeSelector | indent 8 }}
      {{- end }}
      {{- if .Values.affinity }}
      affinity:
      {{ toYaml .Values.affinity | indent 8 }}
      {{- end }}
      {{- if .Values.tolerations }}
      tolerations:
      {{ toYaml .Values.tolerations | indent 6 }}
      {{- end }}
      containers:
        - name: quickpizza
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
          envFrom:
            - configMapRef:
                name: {{ template "quickpizza.fullname" . }}-telemetry
                optional: true
            - configMapRef:
                name: {{ template "quickpizza.fullname" . }}-env
          env:
            - name: QUICKPIZZA_ALL_SERVICES
              value: "0"
            - name: QUICKPIZZA_CONFIG
              value: "1"
          {{- with .Values.config.resources }}
          resources:
          {{- toYaml . | nindent 12 }}
          {{- end }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    {{- include "quickpizza.labels" . | indent 4 }}
    {{- include "quickpizza.ws.labels" . | nindent 4 }}
  name: {{ template "quickpizza.fullname" . }}-ws
  namespace: {{ template "quickpizza.namespace" . }}
spec:
  replicas: {{ .Values.ws.replicas }}
  selector:
    matchLabels:
      {{- include "quickpizza.selectorLabels" . | indent 6 }}
      {{- include "quickpizza.ws.labels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "quickpizza.labels" . | indent 8 }}
        {{- include "quickpizza.ws.labels" . | nindent 8 }}
      name: {{ template "quickpizza.fullname" . }}-ws
    spec:
      restartPolicy: Always
      {{- if .Values.nodeSelector }}
      nodeSelector:
      {{ toYaml .Values.nodeSelector | indent 8 }}
      {{- end }}
      {{- if .Values.affinity }}
      affinity:
      {{ toYaml .Values.affinity | indent 8 }}
      {{- end }}
      {{- if .Values.tolerations }}
      tolerations:
      {{ toYaml .Values.tolerations | indent 6 }}
      {{- end }}
      containers:
        - name: quickpizza
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
          envFrom:
            - configMapRef:
                name: {{ template "quickpizza.fullname" . }}-telemetry
                optional: true
            - configMapRef:
                name: {{ template "quickpizza.fullname" . }}-env
          env:
            - name: QUICKPIZZA_ALL_SERVICES
              value: "0"
            - name: QUICKPIZZA_WS
              value: "1"
          {{- with .Values.ws.resources }}
          resources:
          {{- toYaml . | nindent 12 }}
          {{- end }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    {{- include "quickpizza.labels" . | indent 4 }}
    {{- include "quickpizza.catalog.labels" . | nindent 4 }}
  name: {{ template "quickpizza.fullname" . }}-catalog
  namespace: {{ template "quickpizza.namespace" . }}
spec:
  replicas: {{ .Values.catalog.replicas }}
  selector:
    matchLabels:
      {{- include "quickpizza.selectorLabels" . | indent 6 }}
      {{- include "quickpizza.catalog.labels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "quickpizza.labels" . | indent 8 }}
        {{- include "quickpizza.catalog.labels" . | nindent 8 }}
      name: {{ template "quickpizza.fullname" . }}-catalog
    spec:
      restartPolicy: Always
      {{- if .Values.nodeSelector }}
      nodeSelector:
      {{ toYaml .Values.nodeSelector | indent 8 }}
      {{- end }}
      {{- if .Values.affinity }}
      affinity:
      {{ toYaml .Values.affinity | indent 8 }}
      {{- end }}
      {{- if .Values.tolerations }}
      tolerations:
      {{ toYaml .Values.tolerations | indent 6 }}
      {{- end }}
      containers:
        - name: quickpizza
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
          envFrom:
            - configMapRef:
                name: {{ template "quickpizza.fullname" . }}-telemetry
                optional: true
            - configMapRef:
                name: {{ template "quickpizza.fullname" . }}-env
          env:
            - name: QUICKPIZZA_ALL_SERVICES
              value: "0"
            - name: QUICKPIZZA_CATALOG
              value: "1"
          {{- with .Values.catalog.resources }}
          resources:
          {{- toYaml . | nindent 12 }}
          {{- end }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    {{- include "quickpizza.labels" . | indent 4 }}
    {{- include "quickpizza.copy.labels" . | nindent 4 }}
  name: {{ template "quickpizza.fullname" . }}-copy
  namespace: {{ template "quickpizza.namespace" . }}
spec:
  replicas: {{ .Values.copy.replicas }}
  selector:
    matchLabels:
      {{- include "quickpizza.labels" . | indent 6 }}
      {{- include "quickpizza.copy.labels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "quickpizza.labels" . | indent 8 }}
        {{- include "quickpizza.copy.labels" . | nindent 8 }}
      name: {{ template "quickpizza.fullname" . }}-copy
    spec:
      restartPolicy: Always
      {{- if .Values.nodeSelector }}
      nodeSelector:
      {{ toYaml .Values.nodeSelector | indent 8 }}
      {{- end }}
      {{- if .Values.affinity }}
      affinity:
      {{ toYaml .Values.affinity | indent 8 }}
      {{- end }}
      {{- if .Values.tolerations }}
      tolerations:
      {{ toYaml .Values.tolerations | indent 6 }}
      {{- end }}
      containers:
        - name: quickpizza
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
          envFrom:
            - configMapRef:
                name: {{ template "quickpizza.fullname" . }}-telemetry
                optional: true
            - configMapRef:
                name: {{ template "quickpizza.fullname" . }}-env
          env:
            - name: QUICKPIZZA_ALL_SERVICES
              value: "0"
            - name: QUICKPIZZA_COPY
              value: "1"
          {{- with .Values.copy.resources }}
          resources:
          {{- toYaml . | nindent 12 }}
          {{- end }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    {{- include "quickpizza.labels" . | indent 4 }}
    {{- include "quickpizza.recs.labels" . | nindent 4 }}
  name: {{ template "quickpizza.fullname" . }}-recs
  namespace: {{ template "quickpizza.namespace" . }}
spec:
  replicas: {{ .Values.recs.replicas }}
  selector:
    matchLabels:
      {{- include "quickpizza.labels" . | indent 6 }}
      {{- include "quickpizza.recs.labels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "quickpizza.labels" . | indent 8 }}
        {{- include "quickpizza.recs.labels" . | nindent 8 }}
      name: {{ template "quickpizza.fullname" . }}-recs
    spec:
      restartPolicy: Always
      {{- if .Values.nodeSelector }}
      nodeSelector:
      {{ toYaml .Values.nodeSelector | indent 8 }}
      {{- end }}
      {{- if .Values.affinity }}
      affinity:
      {{ toYaml .Values.affinity | indent 8 }}
      {{- end }}
      {{- if .Values.tolerations }}
      tolerations:
      {{ toYaml .Values.tolerations | indent 6 }}
      {{- end }}
      containers:
        - name: quickpizza
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
          envFrom:
            - configMapRef:
                name: {{ template "quickpizza.fullname" . }}-telemetry
                optional: true
            - configMapRef:
                name: {{ template "quickpizza.fullname" . }}-env
          env:
            - name: QUICKPIZZA_ALL_SERVICES
              value: "0"
            - name: QUICKPIZZA_RECOMMENDATIONS
              value: "1"
            - name: QUICKPIZZA_CATALOG_ENDPOINT
              value: http://{{ template "quickpizza.fullname" . }}-catalog:{{ .Values.service.port }}
            - name: QUICKPIZZA_COPY_ENDPOINT
              value: http://{{ template "quickpizza.fullname" . }}-copy:{{ .Values.service.port }}
          {{- with .Values.recs.resources }}
          resources:
          {{- toYaml . | nindent 12 }}
          {{- end }}
