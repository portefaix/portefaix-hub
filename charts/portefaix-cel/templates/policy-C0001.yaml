# Copyright (C) Nicolas Lamirault <nicolas.lamirault@gmail.com>
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# SPDX-License-Identifier: Apache-2.0

{{- if .Values.policies.c0001.enabled }}
---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingAdmissionPolicy
metadata:
  labels:
    {{- include "portefaix-cel.labels" . | nindent 4 }}
  name: c0001.container.portefaix.xyz
spec:
  matchConstraints:
    resourceRules:
    - apiGroups:
      - ""
      apiVersions:
      - v1
      operations:
      - CREATE
      - UPDATE
      resources:
      - pods
    - apiGroups:
      - apps
      apiVersions:
      - v1
      operations:
      - CREATE
      - UPDATE
      resources:
      - deployments
      - replicasets
      - daemonsets
      - statefulsets
    - apiGroups:
      - batch
      apiVersions:
      - v1
      operations:
      - CREATE
      - UPDATE
      resources:
      - jobs
      - cronjobs
  validations:
  - expression: >
      object.kind != 'Pod' ||
      !(
        has(object.spec.initContainers) &&
        object.spec.initContainers.all(container, container.image.contains(':latest'))
      )
    message: "Pods contains initcontainer/s image with latest tag"
  - expression: >
      ['Deployment','ReplicaSet','DaemonSet','StatefulSet','Job'].all(kind, object.kind != kind) ||
      !(
        has(object.spec.template.spec.initContainers) &&
        object.spec.template.spec.initContainers.all(container, container.image.contains(':latest'))
      )
    message: "Workload contains initcontainer/s image with latest tag"
  - expression: >
      object.kind != 'CronJob' ||
      !(
        has(object.spec.jobTemplate.spec.template.spec.initContainers) &&
        object.spec.jobTemplate.spec.template.spec.initContainers.all(container, container.image.contains(':latest'))
      )
    message: "CronJob contains initcontainer/s image with latest tag"
  - expression: >
      object.kind != 'Pod' ||
      (
        object.spec.initContainers.all(container, container.image.matches("[0-9]+\\.[0-9]+\\.[0-9]$"))
      )
    message: "Pod contains container/s image without SemVer version"
  - expression: >
      ['Deployment','ReplicaSet','DaemonSet','StatefulSet','Job'].all(kind, object.kind != kind) ||
      (
        object.spec.template.spec.containers.all(container, container.image.matches("[0-9]+\\.[0-9]+\\.[0-9]$"))
      )
    message: "Workload contains container/s image without SemVer version"
  - expression: >
      object.kind != 'CronJob' ||
      (
        object.spec.jobTemplate.spec.template.spec.containers.all(container, container.image.matches("[0-9]+\\.[0-9]+\\.[0-9]$"))
      )
    message: "CronJob contains container/s image without SemVer version"
  - expression: >
      object.kind != 'Pod' ||
      !(
        object.spec.containers.all(container, container.image.contains(':latest'))
      )
    message: "Pod contains container/s image with latest tag"
  - expression: >
      ['Deployment','ReplicaSet','DaemonSet','StatefulSet','Job'].all(kind, object.kind != kind) ||
      !(
        object.spec.template.spec.containers.all(container, container.image.contains(':latest'))
      )
    message: "Workload contains container/s image with latest tag"
  - expression: >
      object.kind != 'CronJob' ||
      !(
        object.spec.jobTemplate.spec.template.spec.containers.all(container, container.image.contains(':latest'))
      )
    message: "CronJob contains container/s image with latest tag"
  - expression: >
      object.kind != 'Pod' ||
      (
        object.spec.containers.all(container, container.image.matches("[0-9]+\\.[0-9]+\\.[0-9]$"))
      )
    message: "Pod contains container/s image without SemVer version"
  - expression: >
      ['Deployment','ReplicaSet','DaemonSet','StatefulSet','Job'].all(kind, object.kind != kind) ||
      (
        object.spec.template.spec.containers.all(container, container.image.matches("[0-9]+\\.[0-9]+\\.[0-9]$"))
      )
    message: "Workload contains container/s image without SemVer version"
  - expression: >
      object.kind != 'CronJob' ||
      (
        object.spec.jobTemplate.spec.template.spec.containers.all(container, container.image.matches("[0-9]+\\.[0-9]+\\.[0-9]$"))
      )
    message: "CronJob contains container/s image without SemVer version"
  auditAnnotations:
  - key: "container-invalid-image-tag"
    valueExpression: "'Container image must have a SemVer version and not lastest tag'"
---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingAdmissionPolicyBinding
metadata:
  labels:
    {{- include "portefaix-cel.labels" . | nindent 4 }}
  name: c0001.container.portefaix.xyz
spec:
  policyName: c0001.container.portefaix.xyz
  validationActions:
  {{- toYaml .Values.policies.c0001.validationActions | nindent 2 }}
{{- end }}