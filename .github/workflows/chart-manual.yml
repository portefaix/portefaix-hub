# Copyright (C) Nicolas Lamirault <nicolas.lamirault@gmail.com>
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# SPDX-License-Identifier: Apache-2.0

name: Charts / Manual

on:
  workflow_dispatch:
    inputs:
      chart:
        description: "Which chart"
        required: true

jobs:
  release:
    runs-on: ubuntu-latest
    container: ghcr.io/chgl/kube-powertools:v2.3.68
    steps:
      - name: Add workspace as safe directory
        run: |
          git config --global --add safe.directory /__w/portefaix-hub/portefaix-hub

      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config user.name "${{ github.actor }}"
          git config user.email "${{ github.actor }}@users.noreply.github.com"

      - name: Run chart-releaser
        uses: helm/chart-releaser-action@v1.7.0
        with:
          config: .github/cr.yaml
          charts_repo_url: https://charts.portefaix.xyz
        env:
          CR_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
          CR_SKIP_EXISTING: true
          CR_GENERATE_RELEASE_NOTES: true

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish OCI Charts
        env:
          COSIGN_EXPERIMENTAL: 1
        run: |
          shopt -s nullglob
          for pkg in .cr-release-packages/*; do
            if [ -z "${pkg:-}" ]; then
              break
            fi
            helm push "${pkg}" "oci://${{ env.REGISTRY }}/${{ github.repository_owner }}/charts"
          done

      - name: Install cosign
        uses: sigstore/cosign-installer@v3.9.1

      - name: Check Cosign
        run: cosign version

      - name: Cosign sign packaged chart and generate hashs
        shell: bash
        id: hash
        run: |
          packaged_charts=$(ls .cr-release-packages/*.tgz | xargs)
          for chart in ${packaged_charts}; do
            cosign sign-blob --yes ${chart}
          done

          echo "hashes=$(sha256sum ${packaged_charts} | base64 -w0)" >> "$GITHUB_OUTPUT"

      - name: Upload Helm Charts to Rekor
        run: |
          for chart in `find .cr-release-packages -name '*.tgz' -print`; do
            helm sigstore upload --keyring=/home/runner/.gnupg/secring.gpg ${chart}
          done

    # outputs:
    #   hashes: ${{ steps.hash.outputs.hashes }}
