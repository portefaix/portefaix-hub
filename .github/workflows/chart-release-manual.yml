# Copyright (C) Nicolas Lamirault <nicolas.lamirault@gmail.com>
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# SPDX-License-Identifier: Apache-2.0

name: Charts / Release manual

on:
  workflow_dispatch:
    inputs:
      release_name:
        description: "Chart"
        required: true
      release_version:
        description: "Version"
        required: true

permissions:
  contents: read

env:
  REGISTRY: "ghcr.io"

jobs:
  release:
    permissions:
      attestations: write # need for Artifact Attestations
      contents: write     # to push chart release and create a release (helm/chart-releaser-action)
      id-token: write     # needed for keyless signing
      packages: write     # needed for ghcr access

    runs-on: ubuntu-latest

    outputs:
      chart-digest: ${{ steps.get-digest.outputs.digest }}
      image: ${{ env.REGISTRY }}/${{ github.repository_owner }}/charts/${{ github.event.inputs.release_name }}

    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Set up Helm
        uses: azure/setup-helm@v3.5
        with:
          version: v3.12.0

      - name: Add dependency chart repos
        run: |
          helm repo add bitnami https://charts.bitnami.com/bitnami
          helm repo add grafana https://grafana.github.io/helm-charts
          helm repo add prometheus-community https://prometheus-community.github.io/helm-charts

      - name: Package Helm chart
        run: |
          helm package charts/${{ github.event.inputs.release_name }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Push charts to GHCR
        run: |
          helm push ${{ github.event.inputs.release_name }}-${{ github.event.inputs.release_version }}.tgz oci://${{ env.REGISTRY }}/${{ github.repository_owner }}/charts

      - name: Setup Crane
        uses: imjasonh/setup-crane@31b88efe9de28ae0ffa220711af4b60be9435f6e # v0.4

      - name: Get pushed chart digest
        id: get-digest
        run: |
          digest=$(crane digest ${{ env.REGISTRY }}/${{ github.repository_owner }}/charts/${{ github.event.inputs.release_name }}:${{ github.event.inputs.release_version }})
          echo digest=$digest >> $GITHUB_OUTPUT

      - name: Install cosign
        uses: sigstore/cosign-installer@398d4b0eeef1380460a10c8013a76f728fb906ac # v3.9.1

      - name: Use Cosign
        run: |
          artifact_digest_uri="${{ env.REGISTRY }}/${{ github.repository_owner }}/charts/${{ github.event.inputs.release_name }}@${{ steps.get-digest.outputs.digest }}"
          cosign sign --yes "${artifact_digest_uri}"
          cosign verify "${artifact_digest_uri}" \
              --certificate-identity-regexp "https://github.com/${{ github.repository }}/*" \
              --certificate-oidc-issuer https://token.actions.githubusercontent.com

      - name: Attest Build
        uses: actions/attest-build-provenance@e8998f949152b193b063cb0ec769d69d929409be # v2.4.0
        with:
          subject-name: ${{ env.REGISTRY }}/${{ github.repository_owner }}/charts/${{ github.event.inputs.release_name }}
          subject-digest: ${{ steps.get-digest.outputs.digest }}
          push-to-registry: true

      # - name: Install sigstore Helm plugin
      #   run: |
      #     helm plugin install https://github.com/sigstore/helm-sigstore

      # - name: Upload Helm Charts to Rekor
      #   run: |
      #     helm sigstore upload ${{ github.event.inputs.release_name }}-${{ github.event.inputs.release_version }}.tgz

  helm-provenance:
    needs:
      - publish-oci
    permissions:
      actions: read # To read the workflow path.
      id-token: write # To sign the provenance.
      contents: write # To add assets to a release.
    uses: slsa-framework/slsa-github-generator/.github/workflows/generator_container_slsa3.yml@v2.1.0
    with:
      image: ${{ env.REGISTRY }}/${{ github.repository_owner }}/charts/${{ steps.release-details.outputs.release_name }}:${{ steps.release-details.outputs.release_version }}
      digest: ${{ needs.publish-oci.outputs.digest }}
    secrets:
      registry-password: ${{ secrets.GITHUB_TOKEN }}

  verification-with-cosign:
    needs:
      - publish-oci
    runs-on: ubuntu-latest
    permissions: read-all
    steps:
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Install Cosign
        uses: sigstore/cosign-installer@398d4b0eeef1380460a10c8013a76f728fb906ac # v3.9.1

      - name: Verify image
        env:
          IMAGE: ${{ env.REGISTRY }}/${{ github.repository_owner }}/charts/${{ steps.release-details.outputs.release_name }}:${{ steps.release-details.outputs.release_version }}
          DIGEST: ${{ needs.publish-oci.outputs.digest }}
        run: |
          cosign verify-attestation \
              --type slsaprovenance \
              --certificate-oidc-issuer https://token.actions.githubusercontent.com \
              --certificate-identity-regexp '^https://github.com/slsa-framework/slsa-github-generator/.github/workflows/generator_container_slsa3.yml@refs/tags/v[0-9]+.[0-9]+.[0-9]+$' \
              $IMAGE@$DIGEST
