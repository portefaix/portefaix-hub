# Copyright (C) Nicolas Lamirault <nicolas.lamirault@gmail.com>
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# SPDX-License-Identifier: Apache-2.0

name: Charts / Release manual

on:
  workflow_dispatch:
    inputs:
      release_name:
        description: "Chart"
        required: true
      release_version:
        description: "Version"
        required: true

permissions:
  contents: read

jobs:
  release:
    permissions:
      attestations: write # need for Artifact Attestations
      contents: write     # to push chart release and create a release (helm/chart-releaser-action)
      id-token: write     # needed for keyless signing
      packages: write     # needed for ghcr access

    env:
      REGISTRY: ghcr.io

    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Set up Helm
        uses: azure/setup-helm@v3.5
        with:
          version: v3.12.0

      - name: Add dependency chart repos
        run: |
          helm repo add bitnami https://charts.bitnami.com/bitnami
          helm repo add grafana https://grafana.github.io/helm-charts
          helm repo add prometheus-community https://prometheus-community.github.io/helm-charts

      - name: Package Helm chart
        run: |
          helm package charts/${{ github.event.inputs.release_name }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Push charts to GHCR
        run: |
          helm push ${{ github.event.inputs.release_name }}-${{ github.event.inputs.release_version }}.tgz oci://${{ env.REGISTRY }}/${{ github.repository_owner }}/charts

      - name: Setup Crane
        uses: imjasonh/setup-crane@31b88efe9de28ae0ffa220711af4b60be9435f6e # v0.4

      - name: Get pushed chart digest
        id: get-digest
        run: |
          digest=$(crane digest ${{ env.REGISTRY }}/${{ github.repository_owner }}/charts/${{ github.event.inputs.release_name }}:${{ github.event.inputs.release_version }})
          echo digest=$digest >> $GITHUB_OUTPUT

      - name: Setup cosign
        uses: sigstore/cosign-installer@dc72c7d5c4d10cd6bcb8cf6e3fd625a9e5e537da # v3

      - name: Use Cosign
        run: |
          artifact_digest_uri="${{ env.REGISTRY }}/${{ github.repository_owner }}/charts/${{ github.event.inputs.release_name }}@${{ steps.get-digest.outputs.digest }}"
          cosign sign --yes "${artifact_digest_uri}"
          cosign verify "${artifact_digest_uri}" \
              --certificate-identity-regexp "https://github.com/${{ github.repository }}/*" \
              --certificate-oidc-issuer https://token.actions.githubusercontent.com

      - name: Attest Build
        uses: actions/attest-build-provenance@c074443f1aee8d4aeeae555aebba3282517141b2 # v2.2.3
        with:
          subject-name: ${{ env.REGISTRY }}/${{ github.repository_owner }}/charts/${{ github.event.inputs.release_name }}
          subject-digest: ${{ steps.get-digest.outputs.digest }}
          push-to-registry: true
