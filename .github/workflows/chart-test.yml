# Copyright (C) 2021 Nicolas Lamirault <nicolas.lamirault@gmail.com>
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: Charts / Lint and Test

on:
  push:
    branches:
      - master
    paths:
      - "charts/**"
      - "charts/**/*.yaml"
      - "charts/**/templates/*.yaml"
      - "charts/**/dashboards/*.json"
  pull_request:
    branches:
      - master
    paths:
      - "charts/**"
      - "charts/**/*.yaml"
      - "charts/**/templates/*.yaml"
      - "charts/**/dashboards/*.json"

jobs:
  # Reference https://github.com/marketplace/actions/helm-chart-testing
  lint-chart:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3.2.0

      - name: Fetch history
        run: git fetch --prune --unshallow

      - name: Run chart-testing (lint)
        id: lint
        uses: helm/chart-testing-action@v2.3.1

      - name: Run chart-testing (list-changed)
        id: list-changed
        run: |
          changed=$(ct list-changed --config .github/ct.yaml)
          if [[ -n "$changed" ]]; then
            echo "::set-output name=changed::true"
          fi

      - name: Run chart-testing (lint)
        run: ct lint --config .github/ct.yaml

  # lint-docs:
  #   runs-on: ubuntu-latest
  #   needs: lint-chart
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v3.0.2

  #     - name: Run helm-docs
  #       run: .github/helm-docs.sh

  # kubeval-chart:
  #   runs-on: ubuntu-latest
  #   needs:
  #     - lint-chart
  #     - lint-docs
  #   strategy:
  #     matrix:
  #       k8s:
  #         # from https://github.com/instrumenta/kubernetes-json-schema
  #         - v1.14.10
  #         - v1.15.7
  #         - v1.16.4
  #         - v1.17.4
  #         - v1.18.1
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v2.3.4
  #       with:
  #         fetch-depth: 0

  #     - name: Run kubeval
  #       env:
  #         KUBERNETES_VERSION: ${{ matrix.k8s }}
  #       run: .github/kubeval.sh

  install-chart:
    name: install-chart
    runs-on: ubuntu-latest
    needs:
      - lint-chart
      # - lint-docs
      # - kubeval-chart
    strategy:
      matrix:
        k8s:
          # from https://hub.docker.com/r/kindest/node/tags
          - v1.21.1
          - v1.22.0
          - v1.23.0
          - v1.24.0
          - v1.25.0
    steps:
      - name: Checkout
        uses: actions/checkout@v3.2.0
        with:
          fetch-depth: 0

      - name: Setup chart-testing
        uses: helm/chart-testing-action@v2.3.1
        with:
          version: v3.3.0

      - name: Create kind ${{ matrix.k8s }} cluster
        uses: helm/kind-action@v1.5.0
        with:
          node_image: kindest/node:${{ matrix.k8s }}
          wait: 120s

      - name: Install Helm dependencies
        run: |
          # Prometheus Operator CRDs
          kubectl apply -f https://raw.githubusercontent.com/prometheus-operator/prometheus-operator/v0.50.0/example/prometheus-operator-crd/monitoring.coreos.com_alertmanagerconfigs.yaml
          kubectl apply -f https://raw.githubusercontent.com/prometheus-operator/prometheus-operator/v0.50.0/example/prometheus-operator-crd/monitoring.coreos.com_alertmanagers.yaml
          kubectl apply -f https://raw.githubusercontent.com/prometheus-operator/prometheus-operator/v0.50.0/example/prometheus-operator-crd/monitoring.coreos.com_podmonitors.yaml
          kubectl apply -f https://raw.githubusercontent.com/prometheus-operator/prometheus-operator/v0.50.0/example/prometheus-operator-crd/monitoring.coreos.com_probes.yaml
          kubectl apply -f https://raw.githubusercontent.com/prometheus-operator/prometheus-operator/v0.50.0/example/prometheus-operator-crd/monitoring.coreos.com_prometheuses.yaml
          kubectl apply -f https://raw.githubusercontent.com/prometheus-operator/prometheus-operator/v0.50.0/example/prometheus-operator-crd/monitoring.coreos.com_prometheusrules.yaml
          kubectl apply -f https://raw.githubusercontent.com/prometheus-operator/prometheus-operator/v0.50.0/example/prometheus-operator-crd/monitoring.coreos.com_servicemonitors.yaml
          kubectl apply -f https://raw.githubusercontent.com/prometheus-operator/prometheus-operator/v0.50.0/example/prometheus-operator-crd/monitoring.coreos.com_thanosrulers.yaml

          # Kyverno
          helm repo add kyverno https://kyverno.github.io/kyverno/
          helm repo update
          helm install my-kyverno-crds kyverno/kyverno-crds --version 2.0.2
          sleep 10
          kubectl get crds
          helm install my-kyverno kyverno/kyverno --namespace kyverno --create-namespace --version 2.0.2

          # Crossplane
          helm repo add crossplane-stable https://charts.crossplane.io/stable
          helm repo update
          helm install crossplane --namespace crossplane-system crossplane-stable/crossplane --create-namespace
          sleep 10

      - name: Run chart-testing (install)
        run: |
          ct install --config .github/ct.yaml
